FROM ubuntu:16.04

LABEL maintainer="Amazon AI"

LABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true

ARG XG_VERSION=0.90
ARG PYTHON=python3
ARG PYTHON_PIP=python3-pip
ARG PIP=pip3
ARG PYTHON_VERSION=3.6.6
ARG tornasole_installable
ARG sagemaker_framework_installable

RUN apt-get update && apt-get install -y --no-install-recommends software-properties-common && \
    add-apt-repository ppa:deadsnakes/ppa -y && \
    apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        ca-certificates \
        curl \
        wget \
        git \
        libatlas-dev \
        openssh-client \
        openssh-server \
        nginx \
        jq \
        vim \
        zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz && \
        tar -xvf Python-$PYTHON_VERSION.tgz && cd Python-$PYTHON_VERSION && \
        ./configure && make && make install && \
        apt-get update && \
        apt-get install -y --no-install-recommends \
            libreadline-gplv2-dev \
            libncursesw5-dev \
            libssl-dev \
            libsqlite3-dev \
            tk-dev \
            libgdbm-dev \
            libc6-dev \
            libbz2-dev && \
        make && make install && rm -rf ../Python-$PYTHON_VERSION* && \
        ln -s /usr/local/bin/pip3 /usr/bin/pip

RUN ${PIP} --no-cache-dir install --upgrade pip setuptools
RUN ln -s $(which ${PYTHON}) /usr/local/bin/python

WORKDIR /

# Docker container build should happen in a fresh environment with context for this build.
# All the needed artifacts should be setup before docker build command.
COPY $sagemaker_framework_installable /tmp/.

RUN pip3 install --no-cache --upgrade \
        "xgboost==$XG_VERSION" \
        "PyYAML<4.3" \
        matplotlib \
        numpy \
        pandas \
        Pillow \
        "psutil==5.4.8" \
        "requests<2.21" \
        "retrying==1.3.3" \
        "sagemaker-containers>=2.5.1" \
        scikit-learn \
        scipy \
        "urllib3<1.25" \
        wheel \
        /tmp/$sagemaker_framework_installable && \
    rm /tmp/$sagemaker_framework_installable

# Will install from pypi once packages are released there. For now, copy from local file system.
COPY $tornasole_installable /tmp/.

RUN pip install --force-reinstall /tmp/$tornasole_installable

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib" \
    PYTHONIOENCODING=UTF-8 \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# Set SageMaker training environment variables
ENV SM_INPUT /opt/ml/input
ENV SM_INPUT_TRAINING_CONFIG_FILE $SM_INPUT/config/hyperparameters.json
ENV SM_INPUT_DATA_CONFIG_FILE $SM_INPUT/config/inputdataconfig.json

# Set SageMaker serving environment variables
ENV SM_MODEL_DIR /opt/ml/model
ENV SM_TORNASOLE_OUT_DIR /opt/ml/output/tensors

ENV SAGEMAKER_TRAINING_MODULE sagemaker_xgboost_container.training:main
ENV SAGEMAKER_SERVING_MODULE sagemaker_xgboost_container.serving:main

# Include DMLC python code in PYTHONPATH to use RabitTracker
ENV PYTHONPATH=$PYTHONPATH:/usr/local/lib/python3.5/dist-packages/xgboost/dmlc-core/tracker

# DMLC patches; TODO: remove after making contributions back to xgboost for tracker.py
COPY tracker.py /usr/local/lib/python3.5/dist-packages/xgboost/dmlc-core/tracker/dmlc_tracker/tracker.py

CMD ["/bin/bash"]
