-
  - values # values
  - serial: True # run test cases in serial mode
  - parallel: True # run test cases in parallel mode
  - local: True # run test cases in local mode
  - s3: True # run test cases in s3 mode
  - [simple.py: &simple
      $CODEBUILD_SRC_DIR/examples/tensorflow/scripts/simple.py,
     tf_mnist.py: &tf_mnist
      $CODEBUILD_SRC_DIR/examples/tensorflow/scripts/mnist.py,
     torch_simple.py: &torch_simple
      $CODEBUILD_SRC_DIR/examples/pytorch/scripts/simple.py,
     train_imagenet_resnet_hvd.py: &train_imagenet_resnet_hvd
      $CODEBUILD_SRC_DIR/examples/tensorflow/scripts/train_imagenet_resnet_hvd.py,
     mnist_gluon_basic_hook_demo.py: &mnist_gluon_basic_hook_demo
      $CODEBUILD_SRC_DIR/examples/mxnet/scripts/mnist_gluon_basic_hook_demo.py,
     mnist_gluon_all_zero_demo.py: &mnist_gluon_all_zero_demo
      $CODEBUILD_SRC_DIR/examples/mxnet/scripts/mnist_gluon_all_zero_demo.py,
     mnist_gluon_vg_demo.py: &mnist_gluon_vg_demo
      $CODEBUILD_SRC_DIR/examples/mxnet/scripts/mnist_gluon_vg_demo.py,
     invoker.py: &invoker
      $CODEBUILD_SRC_DIR/tests/analysis/invoker.py,
     Enable: &Enable # enable the test case
       True,
     Disable: &Disable # disable the test case
       False,
    ]

# test cases for tensorflow
-
  - exploding_tensor/tf/false
  - tensorflow
  - *Enable
  - [*simple,
     --lr 0.001 --scale 1 --steps 68 --tornasole_frequency 13 --random_seed True,
     *invoker,
     --rule_name explodingtensor --flag False --end_step 66
    ]
-
  - exploding_tensor/tf/true
  - tensorflow
  - *Enable
  - [*simple,
     --lr 1000000000000 --scale 10000000000000 --tornasole_frequency 9 --steps 66 --random_seed True,
     *invoker,
     --rule_name explodingtensor --flag True --end_step 64
    ]

-
  - vanishing_grad/tf/false
  - tensorflow
  - *Enable
  - [*simple,
     --lr 0.001 --scale 1 --steps 68 --tornasole_frequency 13 --random_seed True,
     *invoker,
     --rule_name vanishinggradient --flag False --end_step 66
    ]
-
  - vanishing_grad/tf/true
  - tensorflow
  - *Disable # tested on remote ubuntu machine with tensorflow_p36 venv
  - [*train_imagenet_resnet_hvd, # this training script will generate 190 steps
     --clear_log --enable_tornasole --tornasole_save_weights --tornasole_save_gradients
     --tornasole_step_interval 10 --constant_initializer 0.01 --random_seed True,
     *invoker,
     --rule_name vanishinggradient --flag True --end_step 181
    ]

-
  - weight_update_ratio/tf/false
  - tensorflow
  - *Enable
  - [*simple,
     --lr 0.001 --scale 1 --steps 75 --tornasole_frequency 1 --random_seed True,
     *invoker,
     --rule_name weightupdateratio --flag False --end_step 71
    ]
-
  - weight_update_ratio/tf/true
  - tensorflow
  - *Enable
  - [*simple,
     --lr 0.0000000001 --scale 1 --steps 75 --tornasole_frequency 1 --random_seed True,
     *invoker,
     --rule_name weightupdateratio --flag True --end_step 71
    ]
-
  - loss_not_decreasing/tf/true
  - tensorflow
  - *Enable
  - [*tf_mnist,
     --lr 0.001 --tornasole_train_frequency 10 --random_seed True,
     *invoker,
     --rule_name lossnotdecreasing --flag True --end_step 1000
    ]
-
  - loss_not_decreasing/tf/false
  - tensorflow
  - *Enable
  - [*simple,
     --lr 0.05 --scale 1 --steps 1009 --tornasole_frequency 13 --random_seed True,
     *invoker,
     --rule_name lossnotdecreasing --flag False --num_steps 100 --min_difference 12
    ]

# test cases for mxnet
-
  - exploding_tensor/mxnet/false
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --random_seed True --num_steps 6,
     *invoker,
     --rule_name explodingtensor --flag False --end_step 4
    ]
-
  - exploding_tensor/mxnet/true
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --learning_rate 1000000000 --random_seed True --num_steps 6,
     *invoker,
     --rule_name explodingtensor --flag True --end_step 4
    ]

-
  - vanishing_grad/mxnet/false
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --random_seed True --num_steps 6,
     *invoker,
     --rule_name vanishinggradient --flag False --end_step 4
    ]
-
  - vanishing_grad/mxnet/true
  - mxnet
  - *Enable
  - [*mnist_gluon_vg_demo, # this training script will generate 1300 steps
     --random_seed True --num_steps 33 --tornasole_frequency 30,
     *invoker,
     --rule_name vanishinggradient --flag True --start_step 1 --end_step 31
    ] # notice, step 0 always returns False

-
  - weight_update_ratio/mxnet/false
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --random_seed True --num_steps 6,
     *invoker,
     --rule_name weightupdateratio --flag False --end_step 4
    ]
-
  - weight_update_ratio/mxnet/true
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --learning_rate 0.0000000001 --random_seed True --num_steps 6,
     *invoker,
     --rule_name weightupdateratio --flag True --end_step 4
    ]
-
  - all_zero/mxnet/false
  - mxnet
  - *Enable
  - [*mnist_gluon_basic_hook_demo,
     --random_seed True --num_steps 5,
     *invoker,
     --rule_name allzero --flag False --end_step 3 --collection_names weights
    ]
-
  - all_zero/mxnet/true
  - mxnet
  - *Enable
  - [*mnist_gluon_all_zero_demo,
     --random_seed True --num_steps 5,
     *invoker,
     --rule_name allzero --flag True --end_step 3 --collection_names ReluActivation
    ]

# test cases for pytorch
-
  - exploding_tensor/pytorch/false
  - pytorch
  - *Enable
  - [*torch_simple,
     --lr .01 --momentum 0.8 --tornasole-frequency 15 --steps 46 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name explodingtensor --end_step 46  --flag False
    ]
-
  - exploding_tensor/pytorch/true
  - pytorch
  - *Enable
  - [*torch_simple,
     --lr 1000000.0 --momentum 10 --tornasole-frequency 8 --steps 20 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name explodingtensor --end_step 20 --flag True
    ]
-
  - vanishing_grad/pytorch/false
  - pytorch
  - *Enable
  - [*torch_simple,
     --lr .01 --momentum 0.9 --tornasole-frequency 3 --steps 10 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name vanishinggradient --end_step 10 --flag False
    ]
-
  - vanishing_grad/pytorch/true
  - pytorch
  - *Enable # tested on remote ubuntu machine with tensorflow_p36 venv
  - [*torch_simple, # this training script will generate 100 steps
     --lr 1.0 --momentum 0.9 --tornasole-frequency 3 --steps 10 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name vanishinggradient --end_step 10 --flag True
    ]
-
  - weight_update_ratio/pytorch/false
  - pytorch
  - *Enable
  - [*torch_simple,
     --lr .0001 --momentum 0.08 --tornasole-frequency 1 --steps 15 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name weightupdateratio --start_step 8 --end_step 15 --flag False
    ]
-
  - weight_update_ratio/pytorch/true
  - pytorch
  - *Enable
  - [*torch_simple,
     --lr .0000000000001 --momentum .000001 --tornasole-frequency 1 --steps 15 --hook-type saveall --random-seed True,
     *invoker,
     --rule_name weightupdateratio --start_step 8 --end_step 15 --flag True
    ]